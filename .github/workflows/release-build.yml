name: release-build
run-name: ${{ github.actor }} is publishing version ${{ inputs.version_name }}
on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: "pre-release or production?"
        options:
          - prerelease
          - production
        default: prerelease
      version_name:
        description: "Version Name"
        required: true
jobs:
  publish-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          author_name: github.actor
          author_email: github
      - name: "validate variables"
        run: |
          echo release_type: ${{inputs.release_type}}
          echo version_name: ${{inputs.version_name}}
          if [[ "${{inputs.release_type}}" == "production" ]]; then
            echo "prerelease=false" >> $GITHUB_ENV
          else
            echo "prerelease=true" >> $GITHUB_ENV
          fi
          echo env.prerelease: ${{env.prerelease}}
      - name: "build zip"
        run: |
          git archive -o "AboveVTT-${{inputs.version_name}}.zip" HEAD
      - name: "publish release"
        run: |
          release_json=$(curl -X POST -H 'Authorization: Bearer ${{secrets.GITHUB_TOKEN}}' https://api.github.com/repos/${GITHUB_REPOSITORY}/releases -d '{ "tag_name": "${{inputs.version_name}}", "name": "${{inputs.version_name}}", "prerelease": ${{env.prerelease}}, "generate_release_notes": true }')
          assets_url=$(echo $release_json | grep -o '"assets_url": "[^"]*' | grep -o '[^"]*$')
          echo "assets_url=${assets_url}" >> $GITHUB_ENV
          echo env.assets_url: ${{env.assets_url}}
      - name: "upload zip"
        run: |
          echo About to upload zip to ${{env.assets_url}}?name=AboveVTT-${{inputs.version_name}}.zip  
          curl -L \
            -X POST \
            -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}"\
            -H "Content-Type: application/octet-stream" \
            ${{env.assets_url}}?name=AboveVTT-${{inputs.version_name}}.zip \
            --data-binary "AboveVTT-${{inputs.version_name}}.zip"
