name: pre-release
run-name: ${{ github.actor }} is publishing a pre-release build
on: [push]
jobs:
  update-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          author_name: github.actor
          author_email: github
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install node-jq --save
      - name: "determine next version_name"
        run: |
          oldVersion=$(cat manifest.json | jq -r .version) && echo $oldVersion
          oldVersionName=$(cat manifest.json | jq -r .version_name) && echo $oldVersionName
          if [[ "$oldVersionName" = "$oldVersion" ]]
          then
            # This is the first beta for this version
            echo "$oldVersionName is equal to $oldVersion"
            newVersionName="${oldVersion}-beta1"
          elif [[ "$oldVersionName" = "$oldVersion"* ]]
          then
            # This is a subsequent beta for this version. Increment the beta number
            echo "$oldVersionName starts with $oldVersion"
            betaNumber=${oldVersionName##*$oldVersion-beta}
            betaNumber=${betaNumber:-0}
            echo betaNumber: $betaNumber
            newBetaNumber=$((betaNumber+1))
            echo newBetaNumber: $newBetaNumber
            newVersionName="${oldVersion}-beta${newBetaNumber}"
          else
            # Somehow got mixed version numbers. This is probably bad
            echo "$oldVersionName does not start with $oldVersion"
            exit 1
          fi
          echo "next_version_name=${newVersionName}"
          echo "next_version_name=${newVersionName}" >> $GITHUB_ENV
      - name: "update manifest"
        run: |
          echo setting manifest.version_name: ${{env.next_version_name}}
          variable=${{env.next_version_name}}; jq --arg variable "$variable" '.version_name = $variable' manifest.json > tmp && mv tmp manifest.json
      - name: "commit and push changes"
        run: |
          rm -rf node_modules
          rm package-lock.json
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add manifest.json
          git commit -am "update manifest version_name to ${{env.next_version_name}}"
          branchName=$(git rev-parse --abbrev-ref HEAD) && echo $branchName
          git push --set-upstream origin $(branchName)
      - name: "build the zip"
        run: |
          git archive -o "AboveVTT-${{env.next_version_name}}.zip" HEAD
      - name: "see if we have access to the zip"
        run: |
          ls -la
          ls "AboveVTT-${{env.next_version_name}}.zip"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{env.next_version_name}}"
          prerelease: true
          title: "${{env.next_version_name}}"
          files: |
            *.zip
            LICENSE