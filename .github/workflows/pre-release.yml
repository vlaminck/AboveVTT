name: pre-release
run-name: ${{ github.actor }} is publishing a pre-release
on: [push]
jobs:
  update-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          author_name: github.actor
          author_email: github
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install node-jq --save
      - run: |
          oldVersion=$(cat manifest.json | jq -r .version) && echo $oldVersion
          oldVersionName=$(cat manifest.json | jq -r .version_name) && echo $oldVersionName
          if [[ "$oldVersionName" = "$oldVersion"* ]];
          then
            echo "$oldVersionName starts with $oldVersion"
            betaNumber=${oldVersionName##*$oldVersion-beta}
            betaNumber=${betaNumber:-0}
            echo betaNumber: $betaNumber
            newBetaNumber=$((betaNumber+1))
            echo newBetaNumber: $newBetaNumber
            newVersionName="${oldVersion}-beta${newBetaNumber}"
          else
            echo "$oldVersionName does not start with $oldVersion"
            newVersionName="${oldVersion}-beta1"
            echo "new version_name is ${oldVersion}-beta1"
          fi
          echo newVersionName: $newVersionName
#          variable=$newVersionName; jq --arg variable "$variable" '.version_name = $variable' manifest.json > tmp && mv tmp manifest.json
#          cat manifest.json
#          rm -rf node_modules
#          rm package-lock.json
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add manifest.json
#          git commit -am "update manifest version_name to $newVersionName"
#          branchName=$(git rev-parse --abbrev-ref HEAD) && echo branchName
#          git push --set-upstream origin $(branchName)
  